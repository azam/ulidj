<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="ulidj"><sessioninfo id="pkrvmf6wy0o8zjz-bd438f38" start="1748632300549" dump="1748632302021"/><package name="io/azam/ulidj"><class name="io/azam/ulidj/ULID" sourcefilename="ULID.java"><method name="&lt;init&gt;" desc="([B)V" line="293"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="()J" line="304"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="()[B" line="314"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="()[B" line="324"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="335"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lio/azam/ulidj/ULID;)I" line="361"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="374"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="387"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lio/azam/ulidj/ULID;Lio/azam/ulidj/ULID;)I" line="411"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Ljava/lang/String;" line="437"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="()[B" line="452"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="()Lio/azam/ulidj/ULID;" line="467"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/util/Random;)Ljava/lang/String;" line="480"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/util/Random;)[B" line="495"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/util/Random;)Lio/azam/ulidj/ULID;" line="510"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/time/Clock;)Ljava/lang/String;" line="524"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/time/Clock;)[B" line="540"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/time/Clock;)Lio/azam/ulidj/ULID;" line="556"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/time/Clock;Ljava/util/Random;)Ljava/lang/String;" line="570"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/time/Clock;Ljava/util/Random;)[B" line="586"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/time/Clock;Ljava/util/Random;)Lio/azam/ulidj/ULID;" line="602"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(J[B)Ljava/lang/String;" line="618"><counter type="INSTRUCTION" missed="0" covered="421"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="(J[B)[B" line="670"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="(J[B)Lio/azam/ulidj/ULID;" line="702"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="(Ljava/lang/CharSequence;)Z" line="714"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBinary" desc="([B)Z" line="739"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="(Ljava/lang/CharSequence;)J" line="751"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestampBinary" desc="([B)J" line="774"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="(Ljava/lang/CharSequence;)[B" line="794"><counter type="INSTRUCTION" missed="0" covered="247"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropyBinary" desc="([B)[B" line="833"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="(Ljava/lang/CharSequence;)[B" line="849"><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBinary" desc="([B)Ljava/lang/String;" line="904"><counter type="INSTRUCTION" missed="0" covered="456"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="(Ljava/lang/CharSequence;)Lio/azam/ulidj/ULID;" line="950"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="([B)Lio/azam/ulidj/ULID;" line="962"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="192"><counter type="INSTRUCTION" missed="0" covered="1159"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3208"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="235"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/ULID$LazyDefaults" sourcefilename="ULID.java"><method name="&lt;clinit&gt;" desc="()V" line="281"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID" sourcefilename="MonotonicULID.java"><method name="&lt;init&gt;" desc="()V" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Random;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/Clock;)V" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/Clock;Ljava/util/Random;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="()Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="()[B" line="213"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="()Lio/azam/ulidj/ULID;" line="229"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutate" desc="()V" line="242"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Ljava/lang/String;" line="289"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="()[B" line="306"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="()Lio/azam/ulidj/ULID;" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID$LazyDefaults" sourcefilename="MonotonicULID.java"><method name="&lt;clinit&gt;" desc="()V" line="124"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ULID.java"><line nr="192" mi="0" ci="131" mb="0" cb="0"/><line nr="202" mi="0" ci="1028" mb="0" cb="0"/><line nr="281" mi="0" ci="5" mb="0" cb="0"/><line nr="293" mi="0" ci="2" mb="0" cb="0"/><line nr="294" mi="0" ci="5" mb="0" cb="0"/><line nr="295" mi="0" ci="1" mb="0" cb="0"/><line nr="304" mi="0" ci="4" mb="0" cb="0"/><line nr="314" mi="0" ci="4" mb="0" cb="0"/><line nr="324" mi="0" ci="5" mb="0" cb="0"/><line nr="335" mi="0" ci="4" mb="0" cb="0"/><line nr="361" mi="0" ci="4" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="4"/><line nr="375" mi="0" ci="2" mb="0" cb="0"/><line nr="376" mi="0" ci="7" mb="0" cb="0"/><line nr="387" mi="0" ci="6" mb="0" cb="0"/><line nr="411" mi="0" ci="3" mb="0" cb="2"/><line nr="412" mi="0" ci="2" mb="0" cb="0"/><line nr="413" mi="0" ci="4" mb="0" cb="4"/><line nr="414" mi="0" ci="6" mb="0" cb="2"/><line nr="416" mi="0" ci="8" mb="0" cb="0"/><line nr="417" mi="0" ci="7" mb="0" cb="2"/><line nr="418" mi="0" ci="7" mb="0" cb="0"/><line nr="419" mi="0" ci="7" mb="0" cb="0"/><line nr="420" mi="0" ci="4" mb="0" cb="0"/><line nr="421" mi="0" ci="2" mb="0" cb="2"/><line nr="422" mi="0" ci="2" mb="0" cb="0"/><line nr="424" mi="0" ci="8" mb="0" cb="0"/><line nr="437" mi="0" ci="3" mb="0" cb="0"/><line nr="438" mi="0" ci="3" mb="0" cb="0"/><line nr="439" mi="0" ci="4" mb="0" cb="0"/><line nr="452" mi="0" ci="3" mb="0" cb="0"/><line nr="453" mi="0" ci="3" mb="0" cb="0"/><line nr="454" mi="0" ci="4" mb="0" cb="0"/><line nr="467" mi="0" ci="5" mb="0" cb="0"/><line nr="480" mi="0" ci="3" mb="0" cb="0"/><line nr="481" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="4" mb="0" cb="0"/><line nr="495" mi="0" ci="3" mb="0" cb="0"/><line nr="496" mi="0" ci="3" mb="0" cb="0"/><line nr="497" mi="0" ci="4" mb="0" cb="0"/><line nr="510" mi="0" ci="6" mb="0" cb="0"/><line nr="524" mi="0" ci="3" mb="0" cb="0"/><line nr="525" mi="0" ci="3" mb="0" cb="0"/><line nr="526" mi="0" ci="5" mb="0" cb="0"/><line nr="540" mi="0" ci="3" mb="0" cb="0"/><line nr="541" mi="0" ci="3" mb="0" cb="0"/><line nr="542" mi="0" ci="5" mb="0" cb="0"/><line nr="556" mi="0" ci="6" mb="0" cb="0"/><line nr="570" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="572" mi="0" ci="5" mb="0" cb="0"/><line nr="586" mi="0" ci="3" mb="0" cb="0"/><line nr="587" mi="0" ci="3" mb="0" cb="0"/><line nr="588" mi="0" ci="5" mb="0" cb="0"/><line nr="602" mi="0" ci="7" mb="0" cb="0"/><line nr="618" mi="0" ci="14" mb="0" cb="8"/><line nr="619" mi="0" ci="5" mb="0" cb="0"/><line nr="622" mi="0" ci="3" mb="0" cb="0"/><line nr="625" mi="0" ci="12" mb="0" cb="0"/><line nr="626" mi="0" ci="12" mb="0" cb="0"/><line nr="627" mi="0" ci="12" mb="0" cb="0"/><line nr="628" mi="0" ci="12" mb="0" cb="0"/><line nr="629" mi="0" ci="12" mb="0" cb="0"/><line nr="630" mi="0" ci="12" mb="0" cb="0"/><line nr="631" mi="0" ci="12" mb="0" cb="0"/><line nr="632" mi="0" ci="12" mb="0" cb="0"/><line nr="633" mi="0" ci="12" mb="0" cb="0"/><line nr="634" mi="0" ci="10" mb="0" cb="0"/><line nr="637" mi="0" ci="13" mb="0" cb="0"/><line nr="638" mi="0" ci="21" mb="0" cb="0"/><line nr="639" mi="0" ci="15" mb="0" cb="0"/><line nr="640" mi="0" ci="21" mb="0" cb="0"/><line nr="641" mi="0" ci="21" mb="0" cb="0"/><line nr="642" mi="0" ci="15" mb="0" cb="0"/><line nr="643" mi="0" ci="21" mb="0" cb="0"/><line nr="644" mi="0" ci="11" mb="0" cb="0"/><line nr="645" mi="0" ci="13" mb="0" cb="0"/><line nr="646" mi="0" ci="21" mb="0" cb="0"/><line nr="647" mi="0" ci="15" mb="0" cb="0"/><line nr="648" mi="0" ci="21" mb="0" cb="0"/><line nr="649" mi="0" ci="21" mb="0" cb="0"/><line nr="650" mi="0" ci="15" mb="0" cb="0"/><line nr="651" mi="0" ci="21" mb="0" cb="0"/><line nr="652" mi="0" ci="11" mb="0" cb="0"/><line nr="654" mi="0" ci="5" mb="0" cb="0"/><line nr="670" mi="0" ci="14" mb="0" cb="8"/><line nr="671" mi="0" ci="5" mb="0" cb="0"/><line nr="674" mi="0" ci="3" mb="0" cb="0"/><line nr="677" mi="0" ci="2" mb="0" cb="0"/><line nr="678" mi="0" ci="6" mb="0" cb="2"/><line nr="679" mi="0" ci="8" mb="0" cb="0"/><line nr="680" mi="0" ci="4" mb="0" cb="0"/><line nr="684" mi="0" ci="6" mb="0" cb="0"/><line nr="686" mi="0" ci="2" mb="0" cb="0"/><line nr="702" mi="0" ci="7" mb="0" cb="0"/><line nr="714" mi="0" ci="6" mb="0" cb="4"/><line nr="715" mi="0" ci="2" mb="0" cb="0"/><line nr="718" mi="0" ci="4" mb="0" cb="0"/><line nr="719" mi="0" ci="14" mb="0" cb="6"/><line nr="720" mi="0" ci="2" mb="0" cb="0"/><line nr="721" mi="0" ci="7" mb="0" cb="2"/><line nr="723" mi="0" ci="4" mb="0" cb="0"/><line nr="724" mi="0" ci="9" mb="0" cb="4"/><line nr="725" mi="0" ci="2" mb="0" cb="0"/><line nr="728" mi="0" ci="2" mb="0" cb="0"/><line nr="739" mi="0" ci="10" mb="0" cb="4"/><line nr="751" mi="0" ci="3" mb="0" cb="2"/><line nr="752" mi="0" ci="5" mb="0" cb="0"/><line nr="753" mi="0" ci="12" mb="0" cb="0"/><line nr="754" mi="0" ci="9" mb="0" cb="0"/><line nr="755" mi="0" ci="9" mb="0" cb="0"/><line nr="756" mi="0" ci="9" mb="0" cb="0"/><line nr="757" mi="0" ci="9" mb="0" cb="0"/><line nr="758" mi="0" ci="9" mb="0" cb="0"/><line nr="759" mi="0" ci="9" mb="0" cb="0"/><line nr="760" mi="0" ci="9" mb="0" cb="0"/><line nr="761" mi="0" ci="9" mb="0" cb="0"/><line nr="762" mi="0" ci="4" mb="0" cb="0"/><line nr="774" mi="0" ci="3" mb="0" cb="2"/><line nr="775" mi="0" ci="5" mb="0" cb="0"/><line nr="776" mi="0" ci="7" mb="0" cb="0"/><line nr="777" mi="0" ci="11" mb="0" cb="0"/><line nr="778" mi="0" ci="11" mb="0" cb="0"/><line nr="779" mi="0" ci="11" mb="0" cb="0"/><line nr="780" mi="0" ci="11" mb="0" cb="0"/><line nr="781" mi="0" ci="11" mb="0" cb="0"/><line nr="782" mi="0" ci="2" mb="0" cb="0"/><line nr="794" mi="0" ci="3" mb="0" cb="2"/><line nr="795" mi="0" ci="5" mb="0" cb="0"/><line nr="796" mi="0" ci="3" mb="0" cb="0"/><line nr="797" mi="0" ci="12" mb="0" cb="0"/><line nr="798" mi="0" ci="9" mb="0" cb="0"/><line nr="799" mi="0" ci="12" mb="0" cb="0"/><line nr="800" mi="0" ci="8" mb="0" cb="0"/><line nr="801" mi="0" ci="9" mb="0" cb="0"/><line nr="802" mi="0" ci="12" mb="0" cb="0"/><line nr="803" mi="0" ci="9" mb="0" cb="0"/><line nr="804" mi="0" ci="12" mb="0" cb="0"/><line nr="805" mi="0" ci="8" mb="0" cb="0"/><line nr="806" mi="0" ci="9" mb="0" cb="0"/><line nr="807" mi="0" ci="12" mb="0" cb="0"/><line nr="808" mi="0" ci="5" mb="0" cb="0"/><line nr="809" mi="0" ci="12" mb="0" cb="0"/><line nr="810" mi="0" ci="9" mb="0" cb="0"/><line nr="811" mi="0" ci="12" mb="0" cb="0"/><line nr="812" mi="0" ci="8" mb="0" cb="0"/><line nr="813" mi="0" ci="9" mb="0" cb="0"/><line nr="814" mi="0" ci="12" mb="0" cb="0"/><line nr="815" mi="0" ci="9" mb="0" cb="0"/><line nr="816" mi="0" ci="12" mb="0" cb="0"/><line nr="817" mi="0" ci="8" mb="0" cb="0"/><line nr="818" mi="0" ci="9" mb="0" cb="0"/><line nr="819" mi="0" ci="12" mb="0" cb="0"/><line nr="820" mi="0" ci="5" mb="0" cb="0"/><line nr="821" mi="0" ci="2" mb="0" cb="0"/><line nr="833" mi="0" ci="3" mb="0" cb="2"/><line nr="834" mi="0" ci="5" mb="0" cb="0"/><line nr="835" mi="0" ci="3" mb="0" cb="0"/><line nr="836" mi="0" ci="6" mb="0" cb="0"/><line nr="837" mi="0" ci="2" mb="0" cb="0"/><line nr="849" mi="0" ci="3" mb="0" cb="2"/><line nr="850" mi="0" ci="5" mb="0" cb="0"/><line nr="851" mi="0" ci="3" mb="0" cb="0"/><line nr="853" mi="0" ci="12" mb="0" cb="0"/><line nr="854" mi="0" ci="5" mb="0" cb="0"/><line nr="855" mi="0" ci="12" mb="0" cb="0"/><line nr="856" mi="0" ci="9" mb="0" cb="0"/><line nr="857" mi="0" ci="12" mb="0" cb="0"/><line nr="858" mi="0" ci="8" mb="0" cb="0"/><line nr="859" mi="0" ci="9" mb="0" cb="0"/><line nr="860" mi="0" ci="12" mb="0" cb="0"/><line nr="861" mi="0" ci="9" mb="0" cb="0"/><line nr="862" mi="0" ci="12" mb="0" cb="0"/><line nr="863" mi="0" ci="8" mb="0" cb="0"/><line nr="864" mi="0" ci="9" mb="0" cb="0"/><line nr="865" mi="0" ci="12" mb="0" cb="0"/><line nr="866" mi="0" ci="5" mb="0" cb="0"/><line nr="868" mi="0" ci="12" mb="0" cb="0"/><line nr="869" mi="0" ci="9" mb="0" cb="0"/><line nr="870" mi="0" ci="12" mb="0" cb="0"/><line nr="871" mi="0" ci="8" mb="0" cb="0"/><line nr="872" mi="0" ci="9" mb="0" cb="0"/><line nr="873" mi="0" ci="12" mb="0" cb="0"/><line nr="874" mi="0" ci="9" mb="0" cb="0"/><line nr="875" mi="0" ci="12" mb="0" cb="0"/><line nr="876" mi="0" ci="8" mb="0" cb="0"/><line nr="877" mi="0" ci="9" mb="0" cb="0"/><line nr="878" mi="0" ci="12" mb="0" cb="0"/><line nr="879" mi="0" ci="5" mb="0" cb="0"/><line nr="880" mi="0" ci="12" mb="0" cb="0"/><line nr="881" mi="0" ci="9" mb="0" cb="0"/><line nr="882" mi="0" ci="12" mb="0" cb="0"/><line nr="883" mi="0" ci="8" mb="0" cb="0"/><line nr="884" mi="0" ci="9" mb="0" cb="0"/><line nr="885" mi="0" ci="12" mb="0" cb="0"/><line nr="886" mi="0" ci="9" mb="0" cb="0"/><line nr="887" mi="0" ci="12" mb="0" cb="0"/><line nr="888" mi="0" ci="8" mb="0" cb="0"/><line nr="889" mi="0" ci="9" mb="0" cb="0"/><line nr="890" mi="0" ci="12" mb="0" cb="0"/><line nr="891" mi="0" ci="5" mb="0" cb="0"/><line nr="892" mi="0" ci="2" mb="0" cb="0"/><line nr="904" mi="0" ci="3" mb="0" cb="2"/><line nr="905" mi="0" ci="5" mb="0" cb="0"/><line nr="906" mi="0" ci="3" mb="0" cb="0"/><line nr="909" mi="0" ci="15" mb="0" cb="0"/><line nr="910" mi="0" ci="11" mb="0" cb="0"/><line nr="911" mi="0" ci="13" mb="0" cb="0"/><line nr="912" mi="0" ci="21" mb="0" cb="0"/><line nr="913" mi="0" ci="15" mb="0" cb="0"/><line nr="914" mi="0" ci="21" mb="0" cb="0"/><line nr="915" mi="0" ci="21" mb="0" cb="0"/><line nr="916" mi="0" ci="15" mb="0" cb="0"/><line nr="917" mi="0" ci="21" mb="0" cb="0"/><line nr="918" mi="0" ci="11" mb="0" cb="0"/><line nr="921" mi="0" ci="13" mb="0" cb="0"/><line nr="922" mi="0" ci="21" mb="0" cb="0"/><line nr="923" mi="0" ci="15" mb="0" cb="0"/><line nr="924" mi="0" ci="21" mb="0" cb="0"/><line nr="925" mi="0" ci="21" mb="0" cb="0"/><line nr="926" mi="0" ci="15" mb="0" cb="0"/><line nr="927" mi="0" ci="21" mb="0" cb="0"/><line nr="928" mi="0" ci="11" mb="0" cb="0"/><line nr="929" mi="0" ci="13" mb="0" cb="0"/><line nr="930" mi="0" ci="21" mb="0" cb="0"/><line nr="931" mi="0" ci="15" mb="0" cb="0"/><line nr="932" mi="0" ci="21" mb="0" cb="0"/><line nr="933" mi="0" ci="21" mb="0" cb="0"/><line nr="934" mi="0" ci="15" mb="0" cb="0"/><line nr="935" mi="0" ci="21" mb="0" cb="0"/><line nr="936" mi="0" ci="11" mb="0" cb="0"/><line nr="938" mi="0" ci="5" mb="0" cb="0"/><line nr="950" mi="0" ci="6" mb="0" cb="0"/><line nr="962" mi="0" ci="3" mb="0" cb="2"/><line nr="963" mi="0" ci="5" mb="0" cb="0"/><line nr="964" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3213"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="236"/><counter type="COMPLEXITY" missed="0" covered="70"/><counter type="METHOD" missed="0" covered="36"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MonotonicULID.java"><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="131" mi="0" ci="7" mb="0" cb="0"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="4"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="3" mb="0" cb="0"/><line nr="181" mi="0" ci="3" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="197" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="6" mb="0" cb="0"/><line nr="213" mi="0" ci="2" mb="0" cb="0"/><line nr="214" mi="0" ci="6" mb="0" cb="0"/><line nr="229" mi="0" ci="2" mb="0" cb="0"/><line nr="230" mi="0" ci="6" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="243" mi="0" ci="8" mb="0" cb="4"/><line nr="244" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="2"/><line nr="248" mi="0" ci="3" mb="0" cb="0"/><line nr="249" mi="0" ci="7" mb="0" cb="0"/><line nr="252" mi="0" ci="2" mb="0" cb="0"/><line nr="253" mi="0" ci="6" mb="0" cb="2"/><line nr="254" mi="0" ci="2" mb="0" cb="2"/><line nr="255" mi="0" ci="5" mb="0" cb="0"/><line nr="256" mi="0" ci="5" mb="0" cb="0"/><line nr="257" mi="0" ci="10" mb="0" cb="2"/><line nr="258" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="2" mb="0" cb="2"/><line nr="264" mi="0" ci="7" mb="0" cb="0"/><line nr="266" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="1" mb="0" cb="0"/><line nr="270" mi="0" ci="3" mb="0" cb="0"/><line nr="271" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="1" mb="0" cb="0"/><line nr="289" mi="0" ci="3" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="3388"/><counter type="BRANCH" missed="0" covered="86"/><counter type="LINE" missed="0" covered="281"/><counter type="COMPLEXITY" missed="0" covered="91"/><counter type="METHOD" missed="0" covered="48"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="0" covered="3388"/><counter type="BRANCH" missed="0" covered="86"/><counter type="LINE" missed="0" covered="281"/><counter type="COMPLEXITY" missed="0" covered="91"/><counter type="METHOD" missed="0" covered="48"/><counter type="CLASS" missed="0" covered="4"/></report>