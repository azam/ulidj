<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="ulidj"><sessioninfo id="pkrvmf6wy0o8zjz-5f61e8fa" start="1748097276848" dump="1748097277615"/><package name="io/azam/ulidj"><class name="io/azam/ulidj/ULID" sourcefilename="ULID.java"><method name="&lt;init&gt;" desc="([B)V" line="248"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="()J" line="259"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="()[B" line="269"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="()[B" line="279"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="290"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lio/azam/ulidj/ULID;)I" line="316"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="329"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="342"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lio/azam/ulidj/ULID;Lio/azam/ulidj/ULID;)I" line="366"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Ljava/lang/String;" line="391"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="()[B" line="405"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="()Lio/azam/ulidj/ULID;" line="419"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/util/Random;)Ljava/lang/String;" line="431"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/util/Random;)[B" line="445"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/util/Random;)Lio/azam/ulidj/ULID;" line="459"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(J[B)Ljava/lang/String;" line="475"><counter type="INSTRUCTION" missed="0" covered="421"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="(J[B)[B" line="527"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="(J[B)Lio/azam/ulidj/ULID;" line="559"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="(Ljava/lang/CharSequence;)Z" line="571"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBinary" desc="([B)Z" line="596"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="(Ljava/lang/CharSequence;)J" line="608"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestampBinary" desc="([B)J" line="631"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="(Ljava/lang/CharSequence;)[B" line="651"><counter type="INSTRUCTION" missed="0" covered="247"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropyBinary" desc="([B)[B" line="690"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="(Ljava/lang/CharSequence;)[B" line="706"><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBinary" desc="([B)Ljava/lang/String;" line="761"><counter type="INSTRUCTION" missed="0" covered="456"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="(Ljava/lang/CharSequence;)Lio/azam/ulidj/ULID;" line="807"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="([B)Lio/azam/ulidj/ULID;" line="819"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="147"><counter type="INSTRUCTION" missed="0" covered="1159"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3151"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="221"/><counter type="COMPLEXITY" missed="0" covered="63"/><counter type="METHOD" missed="0" covered="29"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/ULID$LazyDefaults" sourcefilename="ULID.java"><method name="&lt;clinit&gt;" desc="()V" line="236"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID" sourcefilename="MonotonicULID.java"><method name="&lt;init&gt;" desc="()V" line="83"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Random;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="()[B" line="126"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="()Lio/azam/ulidj/ULID;" line="142"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutate" desc="()V" line="155"><counter type="INSTRUCTION" missed="5" covered="84"/><counter type="BRANCH" missed="2" covered="12"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="129"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="32"/><counter type="COMPLEXITY" missed="2" covered="12"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID$LazyDefaults" sourcefilename="MonotonicULID.java"><method name="&lt;clinit&gt;" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ULID.java"><line nr="147" mi="0" ci="131" mb="0" cb="0"/><line nr="157" mi="0" ci="1028" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="2" mb="0" cb="0"/><line nr="249" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="0" ci="1" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="269" mi="0" ci="4" mb="0" cb="0"/><line nr="279" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="4" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="329" mi="0" ci="7" mb="0" cb="4"/><line nr="330" mi="0" ci="2" mb="0" cb="0"/><line nr="331" mi="0" ci="7" mb="0" cb="0"/><line nr="342" mi="0" ci="6" mb="0" cb="0"/><line nr="366" mi="0" ci="3" mb="0" cb="2"/><line nr="367" mi="0" ci="2" mb="0" cb="0"/><line nr="368" mi="0" ci="4" mb="0" cb="4"/><line nr="369" mi="0" ci="6" mb="0" cb="2"/><line nr="371" mi="0" ci="8" mb="0" cb="0"/><line nr="372" mi="0" ci="7" mb="0" cb="2"/><line nr="373" mi="0" ci="7" mb="0" cb="0"/><line nr="374" mi="0" ci="7" mb="0" cb="0"/><line nr="375" mi="0" ci="4" mb="0" cb="0"/><line nr="376" mi="0" ci="2" mb="0" cb="2"/><line nr="377" mi="0" ci="2" mb="0" cb="0"/><line nr="379" mi="0" ci="8" mb="0" cb="0"/><line nr="391" mi="0" ci="3" mb="0" cb="0"/><line nr="392" mi="0" ci="3" mb="0" cb="0"/><line nr="393" mi="0" ci="4" mb="0" cb="0"/><line nr="405" mi="0" ci="3" mb="0" cb="0"/><line nr="406" mi="0" ci="3" mb="0" cb="0"/><line nr="407" mi="0" ci="4" mb="0" cb="0"/><line nr="419" mi="0" ci="5" mb="0" cb="0"/><line nr="431" mi="0" ci="3" mb="0" cb="0"/><line nr="432" mi="0" ci="3" mb="0" cb="0"/><line nr="433" mi="0" ci="4" mb="0" cb="0"/><line nr="445" mi="0" ci="3" mb="0" cb="0"/><line nr="446" mi="0" ci="3" mb="0" cb="0"/><line nr="447" mi="0" ci="4" mb="0" cb="0"/><line nr="459" mi="0" ci="6" mb="0" cb="0"/><line nr="475" mi="0" ci="14" mb="0" cb="8"/><line nr="476" mi="0" ci="5" mb="0" cb="0"/><line nr="479" mi="0" ci="3" mb="0" cb="0"/><line nr="482" mi="0" ci="12" mb="0" cb="0"/><line nr="483" mi="0" ci="12" mb="0" cb="0"/><line nr="484" mi="0" ci="12" mb="0" cb="0"/><line nr="485" mi="0" ci="12" mb="0" cb="0"/><line nr="486" mi="0" ci="12" mb="0" cb="0"/><line nr="487" mi="0" ci="12" mb="0" cb="0"/><line nr="488" mi="0" ci="12" mb="0" cb="0"/><line nr="489" mi="0" ci="12" mb="0" cb="0"/><line nr="490" mi="0" ci="12" mb="0" cb="0"/><line nr="491" mi="0" ci="10" mb="0" cb="0"/><line nr="494" mi="0" ci="13" mb="0" cb="0"/><line nr="495" mi="0" ci="21" mb="0" cb="0"/><line nr="496" mi="0" ci="15" mb="0" cb="0"/><line nr="497" mi="0" ci="21" mb="0" cb="0"/><line nr="498" mi="0" ci="21" mb="0" cb="0"/><line nr="499" mi="0" ci="15" mb="0" cb="0"/><line nr="500" mi="0" ci="21" mb="0" cb="0"/><line nr="501" mi="0" ci="11" mb="0" cb="0"/><line nr="502" mi="0" ci="13" mb="0" cb="0"/><line nr="503" mi="0" ci="21" mb="0" cb="0"/><line nr="504" mi="0" ci="15" mb="0" cb="0"/><line nr="505" mi="0" ci="21" mb="0" cb="0"/><line nr="506" mi="0" ci="21" mb="0" cb="0"/><line nr="507" mi="0" ci="15" mb="0" cb="0"/><line nr="508" mi="0" ci="21" mb="0" cb="0"/><line nr="509" mi="0" ci="11" mb="0" cb="0"/><line nr="511" mi="0" ci="5" mb="0" cb="0"/><line nr="527" mi="0" ci="14" mb="0" cb="8"/><line nr="528" mi="0" ci="5" mb="0" cb="0"/><line nr="531" mi="0" ci="3" mb="0" cb="0"/><line nr="534" mi="0" ci="2" mb="0" cb="0"/><line nr="535" mi="0" ci="6" mb="0" cb="2"/><line nr="536" mi="0" ci="8" mb="0" cb="0"/><line nr="537" mi="0" ci="4" mb="0" cb="0"/><line nr="541" mi="0" ci="6" mb="0" cb="0"/><line nr="543" mi="0" ci="2" mb="0" cb="0"/><line nr="559" mi="0" ci="7" mb="0" cb="0"/><line nr="571" mi="0" ci="6" mb="0" cb="4"/><line nr="572" mi="0" ci="2" mb="0" cb="0"/><line nr="575" mi="0" ci="4" mb="0" cb="0"/><line nr="576" mi="0" ci="14" mb="0" cb="6"/><line nr="577" mi="0" ci="2" mb="0" cb="0"/><line nr="578" mi="0" ci="7" mb="0" cb="2"/><line nr="580" mi="0" ci="4" mb="0" cb="0"/><line nr="581" mi="0" ci="9" mb="0" cb="4"/><line nr="582" mi="0" ci="2" mb="0" cb="0"/><line nr="585" mi="0" ci="2" mb="0" cb="0"/><line nr="596" mi="0" ci="10" mb="0" cb="4"/><line nr="608" mi="0" ci="3" mb="0" cb="2"/><line nr="609" mi="0" ci="5" mb="0" cb="0"/><line nr="610" mi="0" ci="12" mb="0" cb="0"/><line nr="611" mi="0" ci="9" mb="0" cb="0"/><line nr="612" mi="0" ci="9" mb="0" cb="0"/><line nr="613" mi="0" ci="9" mb="0" cb="0"/><line nr="614" mi="0" ci="9" mb="0" cb="0"/><line nr="615" mi="0" ci="9" mb="0" cb="0"/><line nr="616" mi="0" ci="9" mb="0" cb="0"/><line nr="617" mi="0" ci="9" mb="0" cb="0"/><line nr="618" mi="0" ci="9" mb="0" cb="0"/><line nr="619" mi="0" ci="4" mb="0" cb="0"/><line nr="631" mi="0" ci="3" mb="0" cb="2"/><line nr="632" mi="0" ci="5" mb="0" cb="0"/><line nr="633" mi="0" ci="7" mb="0" cb="0"/><line nr="634" mi="0" ci="11" mb="0" cb="0"/><line nr="635" mi="0" ci="11" mb="0" cb="0"/><line nr="636" mi="0" ci="11" mb="0" cb="0"/><line nr="637" mi="0" ci="11" mb="0" cb="0"/><line nr="638" mi="0" ci="11" mb="0" cb="0"/><line nr="639" mi="0" ci="2" mb="0" cb="0"/><line nr="651" mi="0" ci="3" mb="0" cb="2"/><line nr="652" mi="0" ci="5" mb="0" cb="0"/><line nr="653" mi="0" ci="3" mb="0" cb="0"/><line nr="654" mi="0" ci="12" mb="0" cb="0"/><line nr="655" mi="0" ci="9" mb="0" cb="0"/><line nr="656" mi="0" ci="12" mb="0" cb="0"/><line nr="657" mi="0" ci="8" mb="0" cb="0"/><line nr="658" mi="0" ci="9" mb="0" cb="0"/><line nr="659" mi="0" ci="12" mb="0" cb="0"/><line nr="660" mi="0" ci="9" mb="0" cb="0"/><line nr="661" mi="0" ci="12" mb="0" cb="0"/><line nr="662" mi="0" ci="8" mb="0" cb="0"/><line nr="663" mi="0" ci="9" mb="0" cb="0"/><line nr="664" mi="0" ci="12" mb="0" cb="0"/><line nr="665" mi="0" ci="5" mb="0" cb="0"/><line nr="666" mi="0" ci="12" mb="0" cb="0"/><line nr="667" mi="0" ci="9" mb="0" cb="0"/><line nr="668" mi="0" ci="12" mb="0" cb="0"/><line nr="669" mi="0" ci="8" mb="0" cb="0"/><line nr="670" mi="0" ci="9" mb="0" cb="0"/><line nr="671" mi="0" ci="12" mb="0" cb="0"/><line nr="672" mi="0" ci="9" mb="0" cb="0"/><line nr="673" mi="0" ci="12" mb="0" cb="0"/><line nr="674" mi="0" ci="8" mb="0" cb="0"/><line nr="675" mi="0" ci="9" mb="0" cb="0"/><line nr="676" mi="0" ci="12" mb="0" cb="0"/><line nr="677" mi="0" ci="5" mb="0" cb="0"/><line nr="678" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="3" mb="0" cb="2"/><line nr="691" mi="0" ci="5" mb="0" cb="0"/><line nr="692" mi="0" ci="3" mb="0" cb="0"/><line nr="693" mi="0" ci="6" mb="0" cb="0"/><line nr="694" mi="0" ci="2" mb="0" cb="0"/><line nr="706" mi="0" ci="3" mb="0" cb="2"/><line nr="707" mi="0" ci="5" mb="0" cb="0"/><line nr="708" mi="0" ci="3" mb="0" cb="0"/><line nr="710" mi="0" ci="12" mb="0" cb="0"/><line nr="711" mi="0" ci="5" mb="0" cb="0"/><line nr="712" mi="0" ci="12" mb="0" cb="0"/><line nr="713" mi="0" ci="9" mb="0" cb="0"/><line nr="714" mi="0" ci="12" mb="0" cb="0"/><line nr="715" mi="0" ci="8" mb="0" cb="0"/><line nr="716" mi="0" ci="9" mb="0" cb="0"/><line nr="717" mi="0" ci="12" mb="0" cb="0"/><line nr="718" mi="0" ci="9" mb="0" cb="0"/><line nr="719" mi="0" ci="12" mb="0" cb="0"/><line nr="720" mi="0" ci="8" mb="0" cb="0"/><line nr="721" mi="0" ci="9" mb="0" cb="0"/><line nr="722" mi="0" ci="12" mb="0" cb="0"/><line nr="723" mi="0" ci="5" mb="0" cb="0"/><line nr="725" mi="0" ci="12" mb="0" cb="0"/><line nr="726" mi="0" ci="9" mb="0" cb="0"/><line nr="727" mi="0" ci="12" mb="0" cb="0"/><line nr="728" mi="0" ci="8" mb="0" cb="0"/><line nr="729" mi="0" ci="9" mb="0" cb="0"/><line nr="730" mi="0" ci="12" mb="0" cb="0"/><line nr="731" mi="0" ci="9" mb="0" cb="0"/><line nr="732" mi="0" ci="12" mb="0" cb="0"/><line nr="733" mi="0" ci="8" mb="0" cb="0"/><line nr="734" mi="0" ci="9" mb="0" cb="0"/><line nr="735" mi="0" ci="12" mb="0" cb="0"/><line nr="736" mi="0" ci="5" mb="0" cb="0"/><line nr="737" mi="0" ci="12" mb="0" cb="0"/><line nr="738" mi="0" ci="9" mb="0" cb="0"/><line nr="739" mi="0" ci="12" mb="0" cb="0"/><line nr="740" mi="0" ci="8" mb="0" cb="0"/><line nr="741" mi="0" ci="9" mb="0" cb="0"/><line nr="742" mi="0" ci="12" mb="0" cb="0"/><line nr="743" mi="0" ci="9" mb="0" cb="0"/><line nr="744" mi="0" ci="12" mb="0" cb="0"/><line nr="745" mi="0" ci="8" mb="0" cb="0"/><line nr="746" mi="0" ci="9" mb="0" cb="0"/><line nr="747" mi="0" ci="12" mb="0" cb="0"/><line nr="748" mi="0" ci="5" mb="0" cb="0"/><line nr="749" mi="0" ci="2" mb="0" cb="0"/><line nr="761" mi="0" ci="3" mb="0" cb="2"/><line nr="762" mi="0" ci="5" mb="0" cb="0"/><line nr="763" mi="0" ci="3" mb="0" cb="0"/><line nr="766" mi="0" ci="15" mb="0" cb="0"/><line nr="767" mi="0" ci="11" mb="0" cb="0"/><line nr="768" mi="0" ci="13" mb="0" cb="0"/><line nr="769" mi="0" ci="21" mb="0" cb="0"/><line nr="770" mi="0" ci="15" mb="0" cb="0"/><line nr="771" mi="0" ci="21" mb="0" cb="0"/><line nr="772" mi="0" ci="21" mb="0" cb="0"/><line nr="773" mi="0" ci="15" mb="0" cb="0"/><line nr="774" mi="0" ci="21" mb="0" cb="0"/><line nr="775" mi="0" ci="11" mb="0" cb="0"/><line nr="778" mi="0" ci="13" mb="0" cb="0"/><line nr="779" mi="0" ci="21" mb="0" cb="0"/><line nr="780" mi="0" ci="15" mb="0" cb="0"/><line nr="781" mi="0" ci="21" mb="0" cb="0"/><line nr="782" mi="0" ci="21" mb="0" cb="0"/><line nr="783" mi="0" ci="15" mb="0" cb="0"/><line nr="784" mi="0" ci="21" mb="0" cb="0"/><line nr="785" mi="0" ci="11" mb="0" cb="0"/><line nr="786" mi="0" ci="13" mb="0" cb="0"/><line nr="787" mi="0" ci="21" mb="0" cb="0"/><line nr="788" mi="0" ci="15" mb="0" cb="0"/><line nr="789" mi="0" ci="21" mb="0" cb="0"/><line nr="790" mi="0" ci="21" mb="0" cb="0"/><line nr="791" mi="0" ci="15" mb="0" cb="0"/><line nr="792" mi="0" ci="21" mb="0" cb="0"/><line nr="793" mi="0" ci="11" mb="0" cb="0"/><line nr="795" mi="0" ci="5" mb="0" cb="0"/><line nr="807" mi="0" ci="6" mb="0" cb="0"/><line nr="819" mi="0" ci="3" mb="0" cb="2"/><line nr="820" mi="0" ci="5" mb="0" cb="0"/><line nr="821" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3156"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="222"/><counter type="COMPLEXITY" missed="0" covered="64"/><counter type="METHOD" missed="0" covered="30"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MonotonicULID.java"><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="7" mb="0" cb="2"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="6" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="6" mb="0" cb="0"/><line nr="142" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="2" cb="2"/><line nr="157" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="2"/><line nr="161" mi="0" ci="3" mb="0" cb="0"/><line nr="162" mi="0" ci="7" mb="0" cb="0"/><line nr="165" mi="0" ci="2" mb="0" cb="0"/><line nr="166" mi="0" ci="6" mb="0" cb="2"/><line nr="167" mi="0" ci="2" mb="0" cb="2"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="10" mb="0" cb="2"/><line nr="171" mi="0" ci="5" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="2"/><line nr="177" mi="0" ci="7" mb="0" cb="0"/><line nr="179" mi="0" ci="5" mb="0" cb="0"/><line nr="181" mi="0" ci="1" mb="0" cb="0"/><line nr="183" mi="0" ci="3" mb="0" cb="0"/><line nr="184" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="134"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="1" covered="33"/><counter type="COMPLEXITY" missed="2" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="5" covered="3290"/><counter type="BRANCH" missed="2" covered="82"/><counter type="LINE" missed="1" covered="255"/><counter type="COMPLEXITY" missed="2" covered="77"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="5" covered="3290"/><counter type="BRANCH" missed="2" covered="82"/><counter type="LINE" missed="1" covered="255"/><counter type="COMPLEXITY" missed="2" covered="77"/><counter type="METHOD" missed="0" covered="37"/><counter type="CLASS" missed="0" covered="4"/></report>