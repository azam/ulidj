<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="ulidj"><sessioninfo id="pkrvmf6wy0o8zjz-e5ad6150" start="1748640312423" dump="1748640314006"/><package name="io/azam/ulidj"><class name="io/azam/ulidj/ULID" sourcefilename="ULID.java"><method name="&lt;init&gt;" desc="([B)V" line="305"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="()J" line="316"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="()[B" line="326"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="()[B" line="336"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="347"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compareTo" desc="(Lio/azam/ulidj/ULID;)I" line="373"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="386"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="399"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lio/azam/ulidj/ULID;Lio/azam/ulidj/ULID;)I" line="423"><counter type="INSTRUCTION" missed="0" covered="60"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Ljava/lang/String;" line="449"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="()[B" line="464"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="()Lio/azam/ulidj/ULID;" line="479"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/util/Random;)Ljava/lang/String;" line="492"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/util/Random;)[B" line="507"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/util/Random;)Lio/azam/ulidj/ULID;" line="522"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/time/Clock;)Ljava/lang/String;" line="536"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/time/Clock;)[B" line="552"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/time/Clock;)Lio/azam/ulidj/ULID;" line="568"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="(Ljava/time/Clock;Ljava/util/Random;)Ljava/lang/String;" line="582"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="(Ljava/time/Clock;Ljava/util/Random;)[B" line="598"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="(Ljava/time/Clock;Ljava/util/Random;)Lio/azam/ulidj/ULID;" line="614"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="(J[B)Ljava/lang/String;" line="630"><counter type="INSTRUCTION" missed="0" covered="421"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="(J[B)[B" line="682"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="(J[B)Lio/azam/ulidj/ULID;" line="714"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValid" desc="(Ljava/lang/CharSequence;)Z" line="726"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidBinary" desc="([B)Z" line="751"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestamp" desc="(Ljava/lang/CharSequence;)J" line="763"><counter type="INSTRUCTION" missed="0" covered="96"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTimestampBinary" desc="([B)J" line="786"><counter type="INSTRUCTION" missed="0" covered="72"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropy" desc="(Ljava/lang/CharSequence;)[B" line="806"><counter type="INSTRUCTION" missed="0" covered="247"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="28"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEntropyBinary" desc="([B)[B" line="845"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toBinary" desc="(Ljava/lang/CharSequence;)[B" line="861"><counter type="INSTRUCTION" missed="0" covered="381"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="42"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromBinary" desc="([B)Ljava/lang/String;" line="916"><counter type="INSTRUCTION" missed="0" covered="456"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="(Ljava/lang/CharSequence;)Lio/azam/ulidj/ULID;" line="962"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parseULID" desc="([B)Lio/azam/ulidj/ULID;" line="974"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="204"><counter type="INSTRUCTION" missed="0" covered="1159"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3208"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="235"/><counter type="COMPLEXITY" missed="0" covered="69"/><counter type="METHOD" missed="0" covered="35"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/ULID$LazyDefaults" sourcefilename="ULID.java"><method name="&lt;clinit&gt;" desc="()V" line="293"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID" sourcefilename="MonotonicULID.java"><method name="&lt;init&gt;" desc="()V" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Random;)V" line="170"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/Clock;)V" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/time/Clock;Ljava/util/Random;)V" line="193"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generate" desc="()Ljava/lang/String;" line="214"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateBinary" desc="()[B" line="230"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="generateULID" desc="()Lio/azam/ulidj/ULID;" line="246"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mutate" desc="()V" line="259"><counter type="INSTRUCTION" missed="0" covered="91"/><counter type="BRANCH" missed="0" covered="14"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><method name="random" desc="()Ljava/lang/String;" line="306"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomBinary" desc="()[B" line="323"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="randomULID" desc="()Lio/azam/ulidj/ULID;" line="340"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="164"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="io/azam/ulidj/MonotonicULID$LazyDefaults" sourcefilename="MonotonicULID.java"><method name="&lt;clinit&gt;" desc="()V" line="141"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ULID.java"><line nr="204" mi="0" ci="131" mb="0" cb="0"/><line nr="214" mi="0" ci="1028" mb="0" cb="0"/><line nr="293" mi="0" ci="5" mb="0" cb="0"/><line nr="305" mi="0" ci="2" mb="0" cb="0"/><line nr="306" mi="0" ci="5" mb="0" cb="0"/><line nr="307" mi="0" ci="1" mb="0" cb="0"/><line nr="316" mi="0" ci="4" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="0"/><line nr="336" mi="0" ci="5" mb="0" cb="0"/><line nr="347" mi="0" ci="4" mb="0" cb="0"/><line nr="373" mi="0" ci="4" mb="0" cb="0"/><line nr="386" mi="0" ci="7" mb="0" cb="4"/><line nr="387" mi="0" ci="2" mb="0" cb="0"/><line nr="388" mi="0" ci="7" mb="0" cb="0"/><line nr="399" mi="0" ci="6" mb="0" cb="0"/><line nr="423" mi="0" ci="3" mb="0" cb="2"/><line nr="424" mi="0" ci="2" mb="0" cb="0"/><line nr="425" mi="0" ci="4" mb="0" cb="4"/><line nr="426" mi="0" ci="6" mb="0" cb="2"/><line nr="428" mi="0" ci="8" mb="0" cb="0"/><line nr="429" mi="0" ci="7" mb="0" cb="2"/><line nr="430" mi="0" ci="7" mb="0" cb="0"/><line nr="431" mi="0" ci="7" mb="0" cb="0"/><line nr="432" mi="0" ci="4" mb="0" cb="0"/><line nr="433" mi="0" ci="2" mb="0" cb="2"/><line nr="434" mi="0" ci="2" mb="0" cb="0"/><line nr="436" mi="0" ci="8" mb="0" cb="0"/><line nr="449" mi="0" ci="3" mb="0" cb="0"/><line nr="450" mi="0" ci="3" mb="0" cb="0"/><line nr="451" mi="0" ci="4" mb="0" cb="0"/><line nr="464" mi="0" ci="3" mb="0" cb="0"/><line nr="465" mi="0" ci="3" mb="0" cb="0"/><line nr="466" mi="0" ci="4" mb="0" cb="0"/><line nr="479" mi="0" ci="5" mb="0" cb="0"/><line nr="492" mi="0" ci="3" mb="0" cb="0"/><line nr="493" mi="0" ci="3" mb="0" cb="0"/><line nr="494" mi="0" ci="4" mb="0" cb="0"/><line nr="507" mi="0" ci="3" mb="0" cb="0"/><line nr="508" mi="0" ci="3" mb="0" cb="0"/><line nr="509" mi="0" ci="4" mb="0" cb="0"/><line nr="522" mi="0" ci="6" mb="0" cb="0"/><line nr="536" mi="0" ci="3" mb="0" cb="0"/><line nr="537" mi="0" ci="3" mb="0" cb="0"/><line nr="538" mi="0" ci="5" mb="0" cb="0"/><line nr="552" mi="0" ci="3" mb="0" cb="0"/><line nr="553" mi="0" ci="3" mb="0" cb="0"/><line nr="554" mi="0" ci="5" mb="0" cb="0"/><line nr="568" mi="0" ci="6" mb="0" cb="0"/><line nr="582" mi="0" ci="3" mb="0" cb="0"/><line nr="583" mi="0" ci="3" mb="0" cb="0"/><line nr="584" mi="0" ci="5" mb="0" cb="0"/><line nr="598" mi="0" ci="3" mb="0" cb="0"/><line nr="599" mi="0" ci="3" mb="0" cb="0"/><line nr="600" mi="0" ci="5" mb="0" cb="0"/><line nr="614" mi="0" ci="7" mb="0" cb="0"/><line nr="630" mi="0" ci="14" mb="0" cb="8"/><line nr="631" mi="0" ci="5" mb="0" cb="0"/><line nr="634" mi="0" ci="3" mb="0" cb="0"/><line nr="637" mi="0" ci="12" mb="0" cb="0"/><line nr="638" mi="0" ci="12" mb="0" cb="0"/><line nr="639" mi="0" ci="12" mb="0" cb="0"/><line nr="640" mi="0" ci="12" mb="0" cb="0"/><line nr="641" mi="0" ci="12" mb="0" cb="0"/><line nr="642" mi="0" ci="12" mb="0" cb="0"/><line nr="643" mi="0" ci="12" mb="0" cb="0"/><line nr="644" mi="0" ci="12" mb="0" cb="0"/><line nr="645" mi="0" ci="12" mb="0" cb="0"/><line nr="646" mi="0" ci="10" mb="0" cb="0"/><line nr="649" mi="0" ci="13" mb="0" cb="0"/><line nr="650" mi="0" ci="21" mb="0" cb="0"/><line nr="651" mi="0" ci="15" mb="0" cb="0"/><line nr="652" mi="0" ci="21" mb="0" cb="0"/><line nr="653" mi="0" ci="21" mb="0" cb="0"/><line nr="654" mi="0" ci="15" mb="0" cb="0"/><line nr="655" mi="0" ci="21" mb="0" cb="0"/><line nr="656" mi="0" ci="11" mb="0" cb="0"/><line nr="657" mi="0" ci="13" mb="0" cb="0"/><line nr="658" mi="0" ci="21" mb="0" cb="0"/><line nr="659" mi="0" ci="15" mb="0" cb="0"/><line nr="660" mi="0" ci="21" mb="0" cb="0"/><line nr="661" mi="0" ci="21" mb="0" cb="0"/><line nr="662" mi="0" ci="15" mb="0" cb="0"/><line nr="663" mi="0" ci="21" mb="0" cb="0"/><line nr="664" mi="0" ci="11" mb="0" cb="0"/><line nr="666" mi="0" ci="5" mb="0" cb="0"/><line nr="682" mi="0" ci="14" mb="0" cb="8"/><line nr="683" mi="0" ci="5" mb="0" cb="0"/><line nr="686" mi="0" ci="3" mb="0" cb="0"/><line nr="689" mi="0" ci="2" mb="0" cb="0"/><line nr="690" mi="0" ci="6" mb="0" cb="2"/><line nr="691" mi="0" ci="8" mb="0" cb="0"/><line nr="692" mi="0" ci="4" mb="0" cb="0"/><line nr="696" mi="0" ci="6" mb="0" cb="0"/><line nr="698" mi="0" ci="2" mb="0" cb="0"/><line nr="714" mi="0" ci="7" mb="0" cb="0"/><line nr="726" mi="0" ci="6" mb="0" cb="4"/><line nr="727" mi="0" ci="2" mb="0" cb="0"/><line nr="730" mi="0" ci="4" mb="0" cb="0"/><line nr="731" mi="0" ci="14" mb="0" cb="6"/><line nr="732" mi="0" ci="2" mb="0" cb="0"/><line nr="733" mi="0" ci="7" mb="0" cb="2"/><line nr="735" mi="0" ci="4" mb="0" cb="0"/><line nr="736" mi="0" ci="9" mb="0" cb="4"/><line nr="737" mi="0" ci="2" mb="0" cb="0"/><line nr="740" mi="0" ci="2" mb="0" cb="0"/><line nr="751" mi="0" ci="10" mb="0" cb="4"/><line nr="763" mi="0" ci="3" mb="0" cb="2"/><line nr="764" mi="0" ci="5" mb="0" cb="0"/><line nr="765" mi="0" ci="12" mb="0" cb="0"/><line nr="766" mi="0" ci="9" mb="0" cb="0"/><line nr="767" mi="0" ci="9" mb="0" cb="0"/><line nr="768" mi="0" ci="9" mb="0" cb="0"/><line nr="769" mi="0" ci="9" mb="0" cb="0"/><line nr="770" mi="0" ci="9" mb="0" cb="0"/><line nr="771" mi="0" ci="9" mb="0" cb="0"/><line nr="772" mi="0" ci="9" mb="0" cb="0"/><line nr="773" mi="0" ci="9" mb="0" cb="0"/><line nr="774" mi="0" ci="4" mb="0" cb="0"/><line nr="786" mi="0" ci="3" mb="0" cb="2"/><line nr="787" mi="0" ci="5" mb="0" cb="0"/><line nr="788" mi="0" ci="7" mb="0" cb="0"/><line nr="789" mi="0" ci="11" mb="0" cb="0"/><line nr="790" mi="0" ci="11" mb="0" cb="0"/><line nr="791" mi="0" ci="11" mb="0" cb="0"/><line nr="792" mi="0" ci="11" mb="0" cb="0"/><line nr="793" mi="0" ci="11" mb="0" cb="0"/><line nr="794" mi="0" ci="2" mb="0" cb="0"/><line nr="806" mi="0" ci="3" mb="0" cb="2"/><line nr="807" mi="0" ci="5" mb="0" cb="0"/><line nr="808" mi="0" ci="3" mb="0" cb="0"/><line nr="809" mi="0" ci="12" mb="0" cb="0"/><line nr="810" mi="0" ci="9" mb="0" cb="0"/><line nr="811" mi="0" ci="12" mb="0" cb="0"/><line nr="812" mi="0" ci="8" mb="0" cb="0"/><line nr="813" mi="0" ci="9" mb="0" cb="0"/><line nr="814" mi="0" ci="12" mb="0" cb="0"/><line nr="815" mi="0" ci="9" mb="0" cb="0"/><line nr="816" mi="0" ci="12" mb="0" cb="0"/><line nr="817" mi="0" ci="8" mb="0" cb="0"/><line nr="818" mi="0" ci="9" mb="0" cb="0"/><line nr="819" mi="0" ci="12" mb="0" cb="0"/><line nr="820" mi="0" ci="5" mb="0" cb="0"/><line nr="821" mi="0" ci="12" mb="0" cb="0"/><line nr="822" mi="0" ci="9" mb="0" cb="0"/><line nr="823" mi="0" ci="12" mb="0" cb="0"/><line nr="824" mi="0" ci="8" mb="0" cb="0"/><line nr="825" mi="0" ci="9" mb="0" cb="0"/><line nr="826" mi="0" ci="12" mb="0" cb="0"/><line nr="827" mi="0" ci="9" mb="0" cb="0"/><line nr="828" mi="0" ci="12" mb="0" cb="0"/><line nr="829" mi="0" ci="8" mb="0" cb="0"/><line nr="830" mi="0" ci="9" mb="0" cb="0"/><line nr="831" mi="0" ci="12" mb="0" cb="0"/><line nr="832" mi="0" ci="5" mb="0" cb="0"/><line nr="833" mi="0" ci="2" mb="0" cb="0"/><line nr="845" mi="0" ci="3" mb="0" cb="2"/><line nr="846" mi="0" ci="5" mb="0" cb="0"/><line nr="847" mi="0" ci="3" mb="0" cb="0"/><line nr="848" mi="0" ci="6" mb="0" cb="0"/><line nr="849" mi="0" ci="2" mb="0" cb="0"/><line nr="861" mi="0" ci="3" mb="0" cb="2"/><line nr="862" mi="0" ci="5" mb="0" cb="0"/><line nr="863" mi="0" ci="3" mb="0" cb="0"/><line nr="865" mi="0" ci="12" mb="0" cb="0"/><line nr="866" mi="0" ci="5" mb="0" cb="0"/><line nr="867" mi="0" ci="12" mb="0" cb="0"/><line nr="868" mi="0" ci="9" mb="0" cb="0"/><line nr="869" mi="0" ci="12" mb="0" cb="0"/><line nr="870" mi="0" ci="8" mb="0" cb="0"/><line nr="871" mi="0" ci="9" mb="0" cb="0"/><line nr="872" mi="0" ci="12" mb="0" cb="0"/><line nr="873" mi="0" ci="9" mb="0" cb="0"/><line nr="874" mi="0" ci="12" mb="0" cb="0"/><line nr="875" mi="0" ci="8" mb="0" cb="0"/><line nr="876" mi="0" ci="9" mb="0" cb="0"/><line nr="877" mi="0" ci="12" mb="0" cb="0"/><line nr="878" mi="0" ci="5" mb="0" cb="0"/><line nr="880" mi="0" ci="12" mb="0" cb="0"/><line nr="881" mi="0" ci="9" mb="0" cb="0"/><line nr="882" mi="0" ci="12" mb="0" cb="0"/><line nr="883" mi="0" ci="8" mb="0" cb="0"/><line nr="884" mi="0" ci="9" mb="0" cb="0"/><line nr="885" mi="0" ci="12" mb="0" cb="0"/><line nr="886" mi="0" ci="9" mb="0" cb="0"/><line nr="887" mi="0" ci="12" mb="0" cb="0"/><line nr="888" mi="0" ci="8" mb="0" cb="0"/><line nr="889" mi="0" ci="9" mb="0" cb="0"/><line nr="890" mi="0" ci="12" mb="0" cb="0"/><line nr="891" mi="0" ci="5" mb="0" cb="0"/><line nr="892" mi="0" ci="12" mb="0" cb="0"/><line nr="893" mi="0" ci="9" mb="0" cb="0"/><line nr="894" mi="0" ci="12" mb="0" cb="0"/><line nr="895" mi="0" ci="8" mb="0" cb="0"/><line nr="896" mi="0" ci="9" mb="0" cb="0"/><line nr="897" mi="0" ci="12" mb="0" cb="0"/><line nr="898" mi="0" ci="9" mb="0" cb="0"/><line nr="899" mi="0" ci="12" mb="0" cb="0"/><line nr="900" mi="0" ci="8" mb="0" cb="0"/><line nr="901" mi="0" ci="9" mb="0" cb="0"/><line nr="902" mi="0" ci="12" mb="0" cb="0"/><line nr="903" mi="0" ci="5" mb="0" cb="0"/><line nr="904" mi="0" ci="2" mb="0" cb="0"/><line nr="916" mi="0" ci="3" mb="0" cb="2"/><line nr="917" mi="0" ci="5" mb="0" cb="0"/><line nr="918" mi="0" ci="3" mb="0" cb="0"/><line nr="921" mi="0" ci="15" mb="0" cb="0"/><line nr="922" mi="0" ci="11" mb="0" cb="0"/><line nr="923" mi="0" ci="13" mb="0" cb="0"/><line nr="924" mi="0" ci="21" mb="0" cb="0"/><line nr="925" mi="0" ci="15" mb="0" cb="0"/><line nr="926" mi="0" ci="21" mb="0" cb="0"/><line nr="927" mi="0" ci="21" mb="0" cb="0"/><line nr="928" mi="0" ci="15" mb="0" cb="0"/><line nr="929" mi="0" ci="21" mb="0" cb="0"/><line nr="930" mi="0" ci="11" mb="0" cb="0"/><line nr="933" mi="0" ci="13" mb="0" cb="0"/><line nr="934" mi="0" ci="21" mb="0" cb="0"/><line nr="935" mi="0" ci="15" mb="0" cb="0"/><line nr="936" mi="0" ci="21" mb="0" cb="0"/><line nr="937" mi="0" ci="21" mb="0" cb="0"/><line nr="938" mi="0" ci="15" mb="0" cb="0"/><line nr="939" mi="0" ci="21" mb="0" cb="0"/><line nr="940" mi="0" ci="11" mb="0" cb="0"/><line nr="941" mi="0" ci="13" mb="0" cb="0"/><line nr="942" mi="0" ci="21" mb="0" cb="0"/><line nr="943" mi="0" ci="15" mb="0" cb="0"/><line nr="944" mi="0" ci="21" mb="0" cb="0"/><line nr="945" mi="0" ci="21" mb="0" cb="0"/><line nr="946" mi="0" ci="15" mb="0" cb="0"/><line nr="947" mi="0" ci="21" mb="0" cb="0"/><line nr="948" mi="0" ci="11" mb="0" cb="0"/><line nr="950" mi="0" ci="5" mb="0" cb="0"/><line nr="962" mi="0" ci="6" mb="0" cb="0"/><line nr="974" mi="0" ci="3" mb="0" cb="2"/><line nr="975" mi="0" ci="5" mb="0" cb="0"/><line nr="976" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3213"/><counter type="BRANCH" missed="0" covered="68"/><counter type="LINE" missed="0" covered="236"/><counter type="COMPLEXITY" missed="0" covered="70"/><counter type="METHOD" missed="0" covered="36"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="MonotonicULID.java"><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="170" mi="0" ci="4" mb="0" cb="0"/><line nr="171" mi="0" ci="1" mb="0" cb="0"/><line nr="182" mi="0" ci="4" mb="0" cb="0"/><line nr="183" mi="0" ci="1" mb="0" cb="0"/><line nr="193" mi="0" ci="2" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="4"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><line nr="197" mi="0" ci="3" mb="0" cb="0"/><line nr="198" mi="0" ci="3" mb="0" cb="0"/><line nr="199" mi="0" ci="4" mb="0" cb="0"/><line nr="200" mi="0" ci="1" mb="0" cb="0"/><line nr="214" mi="0" ci="2" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="6" mb="0" cb="0"/><line nr="246" mi="0" ci="2" mb="0" cb="0"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="259" mi="0" ci="4" mb="0" cb="0"/><line nr="260" mi="0" ci="8" mb="0" cb="4"/><line nr="261" mi="0" ci="5" mb="0" cb="0"/><line nr="262" mi="0" ci="5" mb="0" cb="2"/><line nr="265" mi="0" ci="3" mb="0" cb="0"/><line nr="266" mi="0" ci="7" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="2"/><line nr="271" mi="0" ci="2" mb="0" cb="2"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="273" mi="0" ci="5" mb="0" cb="0"/><line nr="274" mi="0" ci="10" mb="0" cb="2"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="279" mi="0" ci="2" mb="0" cb="2"/><line nr="281" mi="0" ci="7" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="285" mi="0" ci="1" mb="0" cb="0"/><line nr="287" mi="0" ci="3" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="306" mi="0" ci="3" mb="0" cb="0"/><line nr="323" mi="0" ci="3" mb="0" cb="0"/><line nr="340" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="175"/><counter type="BRANCH" missed="0" covered="18"/><counter type="LINE" missed="0" covered="45"/><counter type="COMPLEXITY" missed="0" covered="21"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="3388"/><counter type="BRANCH" missed="0" covered="86"/><counter type="LINE" missed="0" covered="281"/><counter type="COMPLEXITY" missed="0" covered="91"/><counter type="METHOD" missed="0" covered="48"/><counter type="CLASS" missed="0" covered="4"/></package><counter type="INSTRUCTION" missed="0" covered="3388"/><counter type="BRANCH" missed="0" covered="86"/><counter type="LINE" missed="0" covered="281"/><counter type="COMPLEXITY" missed="0" covered="91"/><counter type="METHOD" missed="0" covered="48"/><counter type="CLASS" missed="0" covered="4"/></report>